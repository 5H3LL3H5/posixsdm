#!/bin/sh
### posixsdm setup script
### Licensed under: GNU General Public License v3.0

uninstall() {
printf "Removing POSIXSDM files and associations...\n"
if [ -f /usr/bin/posixsdm ]; then
	sudo rm /usr/bin/posixsdm
	rm -r "$HOME"/.config/posixsdm 2>/dev/null
	printf "The program has been removed.\n"
else
	printf "The program has not been found, continuing.\n"
fi

printf "Removing POSIXSDM from .profile...\n"
sed -i '/posixsdm/d' "$HOME"/.*profile

while true; do
printf "\nThe script has finished. Do you want to reboot the machine? (Y/N) "
read -r yn
	case "$yn" in
		[Yy]) reboot;;
		[Nn]) printf "\nExiting without rebooting. Please restart your system.\n"
		exit;;
		*) printf "\nIncorrect input detected, repeating prompt...\n"
	esac
done
}

installer() {
chmod +x ./posixsdm
sudo cp ./posixsdm /usr/bin/
mkdir "$HOME"/.config/posixsdm
echo "exec posixsdm -r" >> "$CONF"

while true; do
printf "\nDo you want to install a customized sx script (startx alternative)? (Y/N) "
read -r yn
	case "$yn" in
		[Yy]) printf "\nInstalling.\n"
		chmod +x ./sx
		cp -f ./sx "$HOME"/.config/posixsdm
		break;;
		[Nn]) printf "\nAborting.\n"
		break;;
		*) printf "\nError: invalid input\n"
	esac
done

while true; do
printf "The scripts have been installed. Do you want to reboot the machine? (Y/N) "
read -r yn
	case "$yn" in
		[Yy]) reboot;;
		[Nn]) printf "\nExiting without rebooting. Please uninstall your current login manager and reboot your machine to run POSIXSDM.\n"
		exit;;
		*) printf "\nError: invalid input\n"
	esac
done
}

setup() {
while true; do
printf "Is your login shell ZSH, Bash or POSIX SH? (Z/S/N) "
read -r zsn
	case "$zsn" in
		[Zz]) printf "\nInstalling ZSH profile.\n"
		CONF="$HOME/.zprofile"
		installer;;
		[Ss]) printf "\nInstalling SH profile.\n"
		CONF="$HOME/.profile"
		installer;;
		[Nn]) printf "Exiting.\n"
		exit;;
		*) printf "\nIncorrect input detected, repeating prompt...\n"
	esac
done
}

prompt() {
printf "This is the setup script for the POSIX Shell Display Manager.\n"
printf "Please read the NOTICE.txt file for more information before installation.\n"
while true; do
printf "Do you want to install or uninstall POSIXSDM? (I/U/N) "
read -r yn
	case "$yn" in
		[Ii]) printf "\nStarting installation setup.\n"
		setup;;
		[Uu]) printf "\nStarting uninstall setup.\n"
		uninstall;;
		[Nn]) printf "Exiting.\n"
		exit;;
		*) printf "\nIncorrect input detected, repeating prompt\n"
	esac
done
}

case "$1" in
	-i|--install) setup;;
	-u|--uninstall) uninstall;;
	-h|--help) printf "POSIXSDM setup script\n"
	printf "Usage: setup <option> [...]\n\nOptions:\n"
	printf -- "-i, --install\t\tRun the installer\n"
	printf -- "-u, --uninstall\t\tRun the uninstaller\n"
	printf -- "-h, --help\t\tDisplay this help message\n";;
	"") prompt;;
	*) printf "Error: '%s' is not a valid option\nType './setup --help' for help\n" "$1"
esac
